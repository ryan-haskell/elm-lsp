Elm LSP is running...

JSON: {"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":97750,"clientInfo":{"name":"Visual Studio Code","version":"1.88.1"},"locale":"en","rootPath":"/Users/ryan/code/ryannhg/elm-vscode/playground","rootUri":"file:///Users/ryan/code/ryannhg/elm-vscode/playground","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional","normalizesLineEndings":true,"changeAnnotationSupport":{"groupsOnLabel":true}},"configuration":true,"didChangeWatchedFiles":{"dynamicRegistration":true,"relativePatternSupport":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"tagSupport":{"valueSet":[1]},"resolveSupport":{"properties":["location.range"]}},"codeLens":{"refreshSupport":true},"executeCommand":{"dynamicRegistration":true},"didChangeConfiguration":{"dynamicRegistration":true},"workspaceFolders":true,"foldingRange":{"refreshSupport":true},"semanticTokens":{"refreshSupport":true},"fileOperations":{"dynamicRegistration":true,"didCreate":true,"didRename":true,"didDelete":true,"willCreate":true,"willRename":true,"willDelete":true},"inlineValue":{"refreshSupport":true},"inlayHint":{"refreshSupport":true},"diagnostics":{"refreshSupport":true}},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]},"insertReplaceSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"insertTextMode":2,"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"completionList":{"itemDefaults":["commitCharacters","editRange","insertTextFormat","insertTextMode","data"]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true},"activeParameterSupport":true},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true,"tagSupport":{"valueSet":[1]},"labelSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"disabledSupport":true,"dataSupport":true,"resolveSupport":{"properties":["edit"]},"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"honorsChangeAnnotations":true},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true,"rangesSupport":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true,"prepareSupportDefaultBehavior":1,"honorsChangeAnnotations":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true,"foldingRangeKind":{"valueSet":["comment","imports","region"]},"foldingRange":{"collapsedText":false}},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"dynamicRegistration":true,"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator"],"tokenModifiers":["declaration","definition","readonly","static","deprecated","abstract","async","modification","documentation","defaultLibrary"],"formats":["relative"],"requests":{"range":true,"full":{"delta":true}},"multilineTokenSupport":false,"overlappingTokenSupport":false,"serverCancelSupport":true,"augmentsSyntaxTokens":true},"linkedEditingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"inlineValue":{"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true,"resolveSupport":{"properties":["tooltip","textEdits","label.tooltip","label.location","label.command"]}},"diagnostic":{"dynamicRegistration":true,"relatedDocumentSupport":false}},"window":{"showMessage":{"messageActionItem":{"additionalPropertiesSupport":true}},"showDocument":{"support":true},"workDoneProgress":true},"general":{"staleRequestSupport":{"cancel":true,"retryOnContentModified":["textDocument/semanticTokens/full","textDocument/semanticTokens/range","textDocument/semanticTokens/full/delta"]},"regularExpressions":{"engine":"ECMAScript","version":"ES2020"},"markdown":{"parser":"marked","version":"1.1.0"},"positionEncodings":["utf-16"]},"notebookDocument":{"synchronization":{"dynamicRegistration":true,"executionSummarySupport":true}}},"trace":"verbose","workspaceFolders":[{"uri":"file:///Users/ryan/code/ryannhg/elm-vscode/playground","name":"playground"}]}}
REQUEST: initialize
RESPONSE: {"id":0,"jsonrpc":"2.0","result":{"capabilities":{"semanticTokensProvider":{"full":true,"legend":{"tokenModifiers":["declaration","definition","readonly","static","deprecated","abstract","async","modification","documentation","defaultLibrary"],"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator"]},"range":false},"textDocumentSync":{"change":1,"openClose":true}},"serverInfo":{"name":"elmLsp","version":"1.0.0"}}}

JSON: {"jsonrpc":"2.0","method":"initialized","params":{}}
NOTIFICATION: initialized

JSON: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/ryan/code/ryannhg/elm-vscode/playground/src/Main.elm","languageId":"elm","version":1,"text":"module Main exposing (main)\n\n{-|\nThis is the `Main` module, which is what Elm looks for\nwhen running your program.\n\n@docs main\n\n-}\nimport Html\nimport Html.Events as Events\n\n\nmain : Html msg\nmain =\n    view \"Hello, world!\"\n\n\ntype Color\n    = Red\n    | Green\n    | Blue\n    | Custom String\n\n\nview : String -> Html msg\nview message =\n    Html.text message\n\n\nisOdd num =\n    num % 2 == 0"}}}
NOTIFICATION: textDocument/didOpen
FS PATH: /Users/ryan/code/ryannhg/elm-vscode/playground/src/Main.elm

JSON: {"jsonrpc":"2.0","id":1,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///Users/ryan/code/ryannhg/elm-vscode/playground/src/Main.elm"}}}
REQUEST: textDocument/semanticTokens/full
FS PATH: /Users/ryan/code/ryannhg/elm-vscode/playground/src/Main.elm
DECLARATIONS: [ModuleDeclaration (Module {moduleKeyword = Located (1,1,6) (), moduleName = Located (1,8,4) "Main", exposingKeyword = Just (Located (1,13,8) ())})]
RESPONSE: {"id":1,"jsonrpc":"2.0","result":{"data":[0,0,6,15,0,0,7,4,0,1,0,5,8,15,0]}}

JSON: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/ryan/code/ryannhg/elm-vscode/playground/src/Main.elm","version":2},"contentChanges":[{"text":" module Main exposing (main)\n\n{-|\nThis is the `Main` module, which is what Elm looks for\nwhen running your program.\n\n@docs main\n\n-}\nimport Html\nimport Html.Events as Events\n\n\nmain : Html msg\nmain =\n    view \"Hello, world!\"\n\n\ntype Color\n    = Red\n    | Green\n    | Blue\n    | Custom String\n\n\nview : String -> Html msg\nview message =\n    Html.text message\n\n\nisOdd num =\n    num % 2 == 0"}]}}
NOTIFICATION: textDocument/didChange
FS PATH: /Users/ryan/code/ryannhg/elm-vscode/playground/src/Main.elm

JSON: {"jsonrpc":"2.0","id":2,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///Users/ryan/code/ryannhg/elm-vscode/playground/src/Main.elm"}}}
REQUEST: textDocument/semanticTokens/full
FS PATH: /Users/ryan/code/ryannhg/elm-vscode/playground/src/Main.elm
DECLARATIONS: []
RESPONSE: {"id":2,"jsonrpc":"2.0","result":{"data":[]}}

JSON: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/ryan/code/ryannhg/elm-vscode/playground/src/Main.elm","version":3},"contentChanges":[{"text":"module Main exposing (main)\n\n{-|\nThis is the `Main` module, which is what Elm looks for\nwhen running your program.\n\n@docs main\n\n-}\nimport Html\nimport Html.Events as Events\n\n\nmain : Html msg\nmain =\n    view \"Hello, world!\"\n\n\ntype Color\n    = Red\n    | Green\n    | Blue\n    | Custom String\n\n\nview : String -> Html msg\nview message =\n    Html.text message\n\n\nisOdd num =\n    num % 2 == 0"}]}}
NOTIFICATION: textDocument/didChange
FS PATH: /Users/ryan/code/ryannhg/elm-vscode/playground/src/Main.elm

JSON: {"jsonrpc":"2.0","id":3,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///Users/ryan/code/ryannhg/elm-vscode/playground/src/Main.elm"}}}
REQUEST: textDocument/semanticTokens/full
FS PATH: /Users/ryan/code/ryannhg/elm-vscode/playground/src/Main.elm
DECLARATIONS: [ModuleDeclaration (Module {moduleKeyword = Located (1,1,6) (), moduleName = Located (1,8,4) "Main", exposingKeyword = Just (Located (1,13,8) ())})]
RESPONSE: {"id":3,"jsonrpc":"2.0","result":{"data":[0,0,6,15,0,0,7,4,0,1,0,5,8,15,0]}}

JSON: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/ryan/code/ryannhg/elm-vscode/playground/src/Main.elm","version":4},"contentChanges":[{"text":"module Main exp osing (main)\n\n{-|\nThis is the `Main` module, which is what Elm looks for\nwhen running your program.\n\n@docs main\n\n-}\nimport Html\nimport Html.Events as Events\n\n\nmain : Html msg\nmain =\n    view \"Hello, world!\"\n\n\ntype Color\n    = Red\n    | Green\n    | Blue\n    | Custom String\n\n\nview : String -> Html msg\nview message =\n    Html.text message\n\n\nisOdd num =\n    num % 2 == 0"}]}}
NOTIFICATION: textDocument/didChange
FS PATH: /Users/ryan/code/ryannhg/elm-vscode/playground/src/Main.elm

JSON: {"jsonrpc":"2.0","id":4,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///Users/ryan/code/ryannhg/elm-vscode/playground/src/Main.elm"}}}
REQUEST: textDocument/semanticTokens/full
FS PATH: /Users/ryan/code/ryannhg/elm-vscode/playground/src/Main.elm
DECLARATIONS: [ModuleDeclaration (Module {moduleKeyword = Located (1,1,6) (), moduleName = Located (1,8,4) "Main", exposingKeyword = Nothing})]
RESPONSE: {"id":4,"jsonrpc":"2.0","result":{"data":[0,0,6,15,0,0,7,4,0,1]}}

JSON: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/ryan/code/ryannhg/elm-vscode/playground/src/Main.elm","version":5},"contentChanges":[{"text":"module Main exposing (main)\n\n{-|\nThis is the `Main` module, which is what Elm looks for\nwhen running your program.\n\n@docs main\n\n-}\nimport Html\nimport Html.Events as Events\n\n\nmain : Html msg\nmain =\n    view \"Hello, world!\"\n\n\ntype Color\n    = Red\n    | Green\n    | Blue\n    | Custom String\n\n\nview : String -> Html msg\nview message =\n    Html.text message\n\n\nisOdd num =\n    num % 2 == 0"}]}}
NOTIFICATION: textDocument/didChange
FS PATH: /Users/ryan/code/ryannhg/elm-vscode/playground/src/Main.elm

JSON: {"jsonrpc":"2.0","id":5,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///Users/ryan/code/ryannhg/elm-vscode/playground/src/Main.elm"}}}
REQUEST: textDocument/semanticTokens/full
FS PATH: /Users/ryan/code/ryannhg/elm-vscode/playground/src/Main.elm
DECLARATIONS: [ModuleDeclaration (Module {moduleKeyword = Located (1,1,6) (), moduleName = Located (1,8,4) "Main", exposingKeyword = Just (Located (1,13,8) ())})]
RESPONSE: {"id":5,"jsonrpc":"2.0","result":{"data":[0,0,6,15,0,0,7,4,0,1,0,5,8,15,0]}}

JSON: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/ryan/code/ryannhg/elm-vscode/playground/src/Main.elm","version":6},"contentChanges":[{"text":"module Ma in exposing (main)\n\n{-|\nThis is the `Main` module, which is what Elm looks for\nwhen running your program.\n\n@docs main\n\n-}\nimport Html\nimport Html.Events as Events\n\n\nmain : Html msg\nmain =\n    view \"Hello, world!\"\n\n\ntype Color\n    = Red\n    | Green\n    | Blue\n    | Custom String\n\n\nview : String -> Html msg\nview message =\n    Html.text message\n\n\nisOdd num =\n    num % 2 == 0"}]}}
NOTIFICATION: textDocument/didChange
FS PATH: /Users/ryan/code/ryannhg/elm-vscode/playground/src/Main.elm

JSON: {"jsonrpc":"2.0","id":6,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///Users/ryan/code/ryannhg/elm-vscode/playground/src/Main.elm"}}}
REQUEST: textDocument/semanticTokens/full
FS PATH: /Users/ryan/code/ryannhg/elm-vscode/playground/src/Main.elm
DECLARATIONS: [ModuleDeclaration (Module {moduleKeyword = Located (1,1,6) (), moduleName = Located (1,8,2) "Ma", exposingKeyword = Nothing})]
RESPONSE: {"id":6,"jsonrpc":"2.0","result":{"data":[0,0,6,15,0,0,7,2,0,1]}}

JSON: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/ryan/code/ryannhg/elm-vscode/playground/src/Main.elm","version":7},"contentChanges":[{"text":"module Main exposing (main)\n\n{-|\nThis is the `Main` module, which is what Elm looks for\nwhen running your program.\n\n@docs main\n\n-}\nimport Html\nimport Html.Events as Events\n\n\nmain : Html msg\nmain =\n    view \"Hello, world!\"\n\n\ntype Color\n    = Red\n    | Green\n    | Blue\n    | Custom String\n\n\nview : String -> Html msg\nview message =\n    Html.text message\n\n\nisOdd num =\n    num % 2 == 0"}]}}
NOTIFICATION: textDocument/didChange
FS PATH: /Users/ryan/code/ryannhg/elm-vscode/playground/src/Main.elm

JSON: {"jsonrpc":"2.0","id":7,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///Users/ryan/code/ryannhg/elm-vscode/playground/src/Main.elm"}}}
REQUEST: textDocument/semanticTokens/full
FS PATH: /Users/ryan/code/ryannhg/elm-vscode/playground/src/Main.elm
DECLARATIONS: [ModuleDeclaration (Module {moduleKeyword = Located (1,1,6) (), moduleName = Located (1,8,4) "Main", exposingKeyword = Just (Located (1,13,8) ())})]
RESPONSE: {"id":7,"jsonrpc":"2.0","result":{"data":[0,0,6,15,0,0,7,4,0,1,0,5,8,15,0]}}

JSON: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/ryan/code/ryannhg/elm-vscode/playground/src/Main.elm","version":8},"contentChanges":[{"text":"module Ma in exposing (main)\n\n{-|\nThis is the `Main` module, which is what Elm looks for\nwhen running your program.\n\n@docs main\n\n-}\nimport Html\nimport Html.Events as Events\n\n\nmain : Html msg\nmain =\n    view \"Hello, world!\"\n\n\ntype Color\n    = Red\n    | Green\n    | Blue\n    | Custom String\n\n\nview : String -> Html msg\nview message =\n    Html.text message\n\n\nisOdd num =\n    num % 2 == 0"}]}}
NOTIFICATION: textDocument/didChange
FS PATH: /Users/ryan/code/ryannhg/elm-vscode/playground/src/Main.elm

JSON: {"jsonrpc":"2.0","id":8,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///Users/ryan/code/ryannhg/elm-vscode/playground/src/Main.elm"}}}
REQUEST: textDocument/semanticTokens/full
FS PATH: /Users/ryan/code/ryannhg/elm-vscode/playground/src/Main.elm
DECLARATIONS: [ModuleDeclaration (Module {moduleKeyword = Located (1,1,6) (), moduleName = Located (1,8,2) "Ma", exposingKeyword = Nothing})]
RESPONSE: {"id":8,"jsonrpc":"2.0","result":{"data":[0,0,6,15,0,0,7,2,0,1]}}

JSON: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/ryan/code/ryannhg/elm-vscode/playground/src/Main.elm","version":9},"contentChanges":[{"text":"module Main exposing (main)\n\n{-|\nThis is the `Main` module, which is what Elm looks for\nwhen running your program.\n\n@docs main\n\n-}\nimport Html\nimport Html.Events as Events\n\n\nmain : Html msg\nmain =\n    view \"Hello, world!\"\n\n\ntype Color\n    = Red\n    | Green\n    | Blue\n    | Custom String\n\n\nview : String -> Html msg\nview message =\n    Html.text message\n\n\nisOdd num =\n    num % 2 == 0"}]}}
NOTIFICATION: textDocument/didChange
FS PATH: /Users/ryan/code/ryannhg/elm-vscode/playground/src/Main.elm

JSON: {"jsonrpc":"2.0","id":9,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///Users/ryan/code/ryannhg/elm-vscode/playground/src/Main.elm"}}}
REQUEST: textDocument/semanticTokens/full
FS PATH: /Users/ryan/code/ryannhg/elm-vscode/playground/src/Main.elm
DECLARATIONS: [ModuleDeclaration (Module {moduleKeyword = Located (1,1,6) (), moduleName = Located (1,8,4) "Main", exposingKeyword = Just (Located (1,13,8) ())})]
RESPONSE: {"id":9,"jsonrpc":"2.0","result":{"data":[0,0,6,15,0,0,7,4,0,1,0,5,8,15,0]}}

JSON: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/ryan/code/ryannhg/elm-vscode/playground/src/Main.elm","version":10},"contentChanges":[{"text":"module Main \n\n{-|\nThis is the `Main` module, which is what Elm looks for\nwhen running your program.\n\n@docs main\n\n-}\nimport Html\nimport Html.Events as Events\n\n\nmain : Html msg\nmain =\n    view \"Hello, world!\"\n\n\ntype Color\n    = Red\n    | Green\n    | Blue\n    | Custom String\n\n\nview : String -> Html msg\nview message =\n    Html.text message\n\n\nisOdd num =\n    num % 2 == 0"}]}}
NOTIFICATION: textDocument/didChange
FS PATH: /Users/ryan/code/ryannhg/elm-vscode/playground/src/Main.elm

JSON: {"jsonrpc":"2.0","id":10,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///Users/ryan/code/ryannhg/elm-vscode/playground/src/Main.elm"}}}
REQUEST: textDocument/semanticTokens/full
FS PATH: /Users/ryan/code/ryannhg/elm-vscode/playground/src/Main.elm
DECLARATIONS: [ModuleDeclaration (Module {moduleKeyword = Located (1,1,6) (), moduleName = Located (1,8,4) "Main", exposingKeyword = Nothing})]
RESPONSE: {"id":10,"jsonrpc":"2.0","result":{"data":[0,0,6,15,0,0,7,4,0,1]}}

JSON: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/ryan/code/ryannhg/elm-vscode/playground/src/Main.elm","version":11},"contentChanges":[{"text":"module Main\n\n{-|\nThis is the `Main` module, which is what Elm looks for\nwhen running your program.\n\n@docs main\n\n-}\nimport Html\nimport Html.Events as Events\n\n\nmain : Html msg\nmain =\n    view \"Hello, world!\"\n\n\ntype Color\n    = Red\n    | Green\n    | Blue\n    | Custom String\n\n\nview : String -> Html msg\nview message =\n    Html.text message\n\n\nisOdd num =\n    num % 2 == 0"}]}}
NOTIFICATION: textDocument/didChange
FS PATH: /Users/ryan/code/ryannhg/elm-vscode/playground/src/Main.elm

JSON: {"jsonrpc":"2.0","id":11,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///Users/ryan/code/ryannhg/elm-vscode/playground/src/Main.elm"}}}
REQUEST: textDocument/semanticTokens/full
FS PATH: /Users/ryan/code/ryannhg/elm-vscode/playground/src/Main.elm
DECLARATIONS: [ModuleDeclaration (Module {moduleKeyword = Located (1,1,6) (), moduleName = Located (1,8,4) "Main", exposingKeyword = Nothing})]
RESPONSE: {"id":11,"jsonrpc":"2.0","result":{"data":[0,0,6,15,0,0,7,4,0,1]}}

JSON: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/ryan/code/ryannhg/elm-vscode/playground/src/Main.elm","version":13},"contentChanges":[{"text":"module Main e\n\n{-|\nThis is the `Main` module, which is what Elm looks for\nwhen running your program.\n\n@docs main\n\n-}\nimport Html\nimport Html.Events as Events\n\n\nmain : Html msg\nmain =\n    view \"Hello, world!\"\n\n\ntype Color\n    = Red\n    | Green\n    | Blue\n    | Custom String\n\n\nview : String -> Html msg\nview message =\n    Html.text message\n\n\nisOdd num =\n    num % 2 == 0"}]}}
NOTIFICATION: textDocument/didChange
FS PATH: /Users/ryan/code/ryannhg/elm-vscode/playground/src/Main.elm

JSON: {"jsonrpc":"2.0","id":12,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///Users/ryan/code/ryannhg/elm-vscode/playground/src/Main.elm"}}}
REQUEST: textDocument/semanticTokens/full
FS PATH: /Users/ryan/code/ryannhg/elm-vscode/playground/src/Main.elm
DECLARATIONS: [ModuleDeclaration (Module {moduleKeyword = Located (1,1,6) (), moduleName = Located (1,8,4) "Main", exposingKeyword = Nothing})]
RESPONSE: {"id":12,"jsonrpc":"2.0","result":{"data":[0,0,6,15,0,0,7,4,0,1]}}

JSON: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/ryan/code/ryannhg/elm-vscode/playground/src/Main.elm","version":14},"contentChanges":[{"text":"module Main ex\n\n{-|\nThis is the `Main` module, which is what Elm looks for\nwhen running your program.\n\n@docs main\n\n-}\nimport Html\nimport Html.Events as Events\n\n\nmain : Html msg\nmain =\n    view \"Hello, world!\"\n\n\ntype Color\n    = Red\n    | Green\n    | Blue\n    | Custom String\n\n\nview : String -> Html msg\nview message =\n    Html.text message\n\n\nisOdd num =\n    num % 2 == 0"}]}}
NOTIFICATION: textDocument/didChange
FS PATH: /Users/ryan/code/ryannhg/elm-vscode/playground/src/Main.elm

JSON: {"jsonrpc":"2.0","id":13,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///Users/ryan/code/ryannhg/elm-vscode/playground/src/Main.elm"}}}
REQUEST: textDocument/semanticTokens/full
FS PATH: /Users/ryan/code/ryannhg/elm-vscode/playground/src/Main.elm
DECLARATIONS: [ModuleDeclaration (Module {moduleKeyword = Located (1,1,6) (), moduleName = Located (1,8,4) "Main", exposingKeyword = Nothing})]
RESPONSE: {"id":13,"jsonrpc":"2.0","result":{"data":[0,0,6,15,0,0,7,4,0,1]}}

JSON: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/ryan/code/ryannhg/elm-vscode/playground/src/Main.elm","version":16},"contentChanges":[{"text":"module Main expo\n\n{-|\nThis is the `Main` module, which is what Elm looks for\nwhen running your program.\n\n@docs main\n\n-}\nimport Html\nimport Html.Events as Events\n\n\nmain : Html msg\nmain =\n    view \"Hello, world!\"\n\n\ntype Color\n    = Red\n    | Green\n    | Blue\n    | Custom String\n\n\nview : String -> Html msg\nview message =\n    Html.text message\n\n\nisOdd num =\n    num % 2 == 0"}]}}
NOTIFICATION: textDocument/didChange
FS PATH: /Users/ryan/code/ryannhg/elm-vscode/playground/src/Main.elm

JSON: {"jsonrpc":"2.0","id":14,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///Users/ryan/code/ryannhg/elm-vscode/playground/src/Main.elm"}}}
REQUEST: textDocument/semanticTokens/full
FS PATH: /Users/ryan/code/ryannhg/elm-vscode/playground/src/Main.elm
DECLARATIONS: [ModuleDeclaration (Module {moduleKeyword = Located (1,1,6) (), moduleName = Located (1,8,4) "Main", exposingKeyword = Nothing})]
RESPONSE: {"id":14,"jsonrpc":"2.0","result":{"data":[0,0,6,15,0,0,7,4,0,1]}}

JSON: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/ryan/code/ryannhg/elm-vscode/playground/src/Main.elm","version":19},"contentChanges":[{"text":"module Main exposin\n\n{-|\nThis is the `Main` module, which is what Elm looks for\nwhen running your program.\n\n@docs main\n\n-}\nimport Html\nimport Html.Events as Events\n\n\nmain : Html msg\nmain =\n    view \"Hello, world!\"\n\n\ntype Color\n    = Red\n    | Green\n    | Blue\n    | Custom String\n\n\nview : String -> Html msg\nview message =\n    Html.text message\n\n\nisOdd num =\n    num % 2 == 0"}]}}
NOTIFICATION: textDocument/didChange
FS PATH: /Users/ryan/code/ryannhg/elm-vscode/playground/src/Main.elm

JSON: {"jsonrpc":"2.0","id":15,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///Users/ryan/code/ryannhg/elm-vscode/playground/src/Main.elm"}}}
REQUEST: textDocument/semanticTokens/full
FS PATH: /Users/ryan/code/ryannhg/elm-vscode/playground/src/Main.elm
DECLARATIONS: [ModuleDeclaration (Module {moduleKeyword = Located (1,1,6) (), moduleName = Located (1,8,4) "Main", exposingKeyword = Nothing})]
RESPONSE: {"id":15,"jsonrpc":"2.0","result":{"data":[0,0,6,15,0,0,7,4,0,1]}}

JSON: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/ryan/code/ryannhg/elm-vscode/playground/src/Main.elm","version":20},"contentChanges":[{"text":"module Main exposing\n\n{-|\nThis is the `Main` module, which is what Elm looks for\nwhen running your program.\n\n@docs main\n\n-}\nimport Html\nimport Html.Events as Events\n\n\nmain : Html msg\nmain =\n    view \"Hello, world!\"\n\n\ntype Color\n    = Red\n    | Green\n    | Blue\n    | Custom String\n\n\nview : String -> Html msg\nview message =\n    Html.text message\n\n\nisOdd num =\n    num % 2 == 0"}]}}
NOTIFICATION: textDocument/didChange
FS PATH: /Users/ryan/code/ryannhg/elm-vscode/playground/src/Main.elm

JSON: {"jsonrpc":"2.0","id":16,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///Users/ryan/code/ryannhg/elm-vscode/playground/src/Main.elm"}}}
REQUEST: textDocument/semanticTokens/full
FS PATH: /Users/ryan/code/ryannhg/elm-vscode/playground/src/Main.elm
DECLARATIONS: [ModuleDeclaration (Module {moduleKeyword = Located (1,1,6) (), moduleName = Located (1,8,4) "Main", exposingKeyword = Just (Located (1,13,8) ())})]
RESPONSE: {"id":16,"jsonrpc":"2.0","result":{"data":[0,0,6,15,0,0,7,4,0,1,0,5,8,15,0]}}

JSON: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/ryan/code/ryannhg/elm-vscode/playground/src/Main.elm","version":22},"contentChanges":[{"text":"module Main exposing (\n\n{-|\nThis is the `Main` module, which is what Elm looks for\nwhen running your program.\n\n@docs main\n\n-}\nimport Html\nimport Html.Events as Events\n\n\nmain : Html msg\nmain =\n    view \"Hello, world!\"\n\n\ntype Color\n    = Red\n    | Green\n    | Blue\n    | Custom String\n\n\nview : String -> Html msg\nview message =\n    Html.text message\n\n\nisOdd num =\n    num % 2 == 0"}]}}
NOTIFICATION: textDocument/didChange
FS PATH: /Users/ryan/code/ryannhg/elm-vscode/playground/src/Main.elm

JSON: {"jsonrpc":"2.0","id":17,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///Users/ryan/code/ryannhg/elm-vscode/playground/src/Main.elm"}}}
REQUEST: textDocument/semanticTokens/full
FS PATH: /Users/ryan/code/ryannhg/elm-vscode/playground/src/Main.elm
DECLARATIONS: [ModuleDeclaration (Module {moduleKeyword = Located (1,1,6) (), moduleName = Located (1,8,4) "Main", exposingKeyword = Just (Located (1,13,8) ())})]
RESPONSE: {"id":17,"jsonrpc":"2.0","result":{"data":[0,0,6,15,0,0,7,4,0,1,0,5,8,15,0]}}

JSON: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/ryan/code/ryannhg/elm-vscode/playground/src/Main.elm","version":26},"contentChanges":[{"text":"module Main exposing (main\n\n{-|\nThis is the `Main` module, which is what Elm looks for\nwhen running your program.\n\n@docs main\n\n-}\nimport Html\nimport Html.Events as Events\n\n\nmain : Html msg\nmain =\n    view \"Hello, world!\"\n\n\ntype Color\n    = Red\n    | Green\n    | Blue\n    | Custom String\n\n\nview : String -> Html msg\nview message =\n    Html.text message\n\n\nisOdd num =\n    num % 2 == 0"}]}}
NOTIFICATION: textDocument/didChange
FS PATH: /Users/ryan/code/ryannhg/elm-vscode/playground/src/Main.elm

JSON: {"jsonrpc":"2.0","id":18,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///Users/ryan/code/ryannhg/elm-vscode/playground/src/Main.elm"}}}
REQUEST: textDocument/semanticTokens/full
FS PATH: /Users/ryan/code/ryannhg/elm-vscode/playground/src/Main.elm
DECLARATIONS: [ModuleDeclaration (Module {moduleKeyword = Located (1,1,6) (), moduleName = Located (1,8,4) "Main", exposingKeyword = Just (Located (1,13,8) ())})]
RESPONSE: {"id":18,"jsonrpc":"2.0","result":{"data":[0,0,6,15,0,0,7,4,0,1,0,5,8,15,0]}}

JSON: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/ryan/code/ryannhg/elm-vscode/playground/src/Main.elm","version":27},"contentChanges":[{"text":"module Main exposing (main)\n\n{-|\nThis is the `Main` module, which is what Elm looks for\nwhen running your program.\n\n@docs main\n\n-}\nimport Html\nimport Html.Events as Events\n\n\nmain : Html msg\nmain =\n    view \"Hello, world!\"\n\n\ntype Color\n    = Red\n    | Green\n    | Blue\n    | Custom String\n\n\nview : String -> Html msg\nview message =\n    Html.text message\n\n\nisOdd num =\n    num % 2 == 0"}]}}
NOTIFICATION: textDocument/didChange
FS PATH: /Users/ryan/code/ryannhg/elm-vscode/playground/src/Main.elm

JSON: {"jsonrpc":"2.0","id":19,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///Users/ryan/code/ryannhg/elm-vscode/playground/src/Main.elm"}}}
REQUEST: textDocument/semanticTokens/full
FS PATH: /Users/ryan/code/ryannhg/elm-vscode/playground/src/Main.elm
DECLARATIONS: [ModuleDeclaration (Module {moduleKeyword = Located (1,1,6) (), moduleName = Located (1,8,4) "Main", exposingKeyword = Just (Located (1,13,8) ())})]
RESPONSE: {"id":19,"jsonrpc":"2.0","result":{"data":[0,0,6,15,0,0,7,4,0,1,0,5,8,15,0]}}
